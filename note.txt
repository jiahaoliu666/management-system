├── src/
│   ├── auth/              # 身份驗證相關邏輯
│   │   ├── AuthContext.tsx    # 全局身份驗證狀態管理
│   │   └── ProtectedRoute.tsx # 受保護路由組件
│   │
│   ├── components/        #  UI 組件
│   │   ├── Dashboard.tsx      # 儀表板
│   │   ├── DocumentsView.tsx  # 文件管理
│   │   ├── EditorView.tsx     # 文件編輯器視圖
│   │   ├── Header.tsx         # 頁面頂部
│   │   ├── Sidebar.tsx        # 側邊導航欄
│   │   ├── TeamView.tsx       # 團隊成員
│   │   └── modals/          # 彈出視窗組件
│   │       ├── ModalBase.tsx               # 基礎彈出視窗
│   │       ├── ProfileModal.tsx            # 個人資料彈出視窗
│   │       ├── SettingsModal.tsx           # 設定彈出視窗
│   │       └── NotificationSettingsModal.tsx # 通知設定彈出視窗
│   │       └── InviteMemberModal.tsx # 邀請成員彈出視窗
│   │       └── DeleteMemberModal.tsx # 刪除成員彈出視窗
│   │
│   ├── layouts/           # 頁面佈局組件
│   │   └── MainLayout.tsx     # 主要應用佈局
│   │
│   ├── lib/               # 核心邏輯或第三方庫封裝
│   │   ├── api/             # API 請求相關
│   │   │   └── apiClient.ts   # Axios API 客戶端實例
│   │   ├── config/          # 配置文件
│   │   │   └── cognito.ts     # AWS Cognito 服務配置
│   │   └── hooks/           # 自定義 React Hooks
│   │       ├── useCognito.ts    # Cognito 身份驗證 Hook
│   │       ├── useCognitoUsers.ts # 獲取 Cognito 用戶清單的 Hook
│   │       └── useSecurityMonitor.ts # 用戶活動安全監控 Hook
│   │       └── useDirectoryTree.ts # 文件目錄 Hook
│   │
│   ├── pages/             # 應用頁面
│   │   ├── _app.tsx         # Next.js 應用根組件
│   │   ├── 404.tsx          # 404 錯誤頁面
│   │   ├── index.tsx        # 首頁
│   │   └── login.tsx        # 登入頁面
│   │   └── api/             # API 請求相關
│   │       └── invite-user.ts # 邀請成員 API
│   │       └── delete-user.ts # 刪除成員 API
│   │       └── cognito-users.ts # 獲取 Cognito 用戶清單 API
│   │       └── folder.ts # 新增、修改、刪除目錄 API
│   │       └── file.ts # 新增、修改、刪除文件 API
│   │
│   ├── styles/            # 樣式文件
│   │   ├── globals.css      # 全局 CSS 樣式
│   │   └── toast.css        # Toast 通知的樣式
│   │
│   ├── types/             # TypeScript 型別定義
│   │   └── index.ts         # 全局型別定義
│   │
│   └── utils/             # 工具函式
│       ├── constants.ts     # 應用程序常數
│       └── notification.ts  # 通知顯示工具
│
------------------------------------
請幫我優化當前彈出的個人資料卡片視窗 UI 樣式設計，要求具備良好的用戶體驗和專業視覺效果，
包括：色彩搭配、排版佈局、元件間距、響應式設計等方面的改進，
同時確保 CSS/樣式代碼結構清晰、可維護性高，並遵循現代前端開發最佳實踐

根據當前專案需求，UI介面再幫我添加更加完善且完整、常用且必須使用到的功能，
同時遵循現代前端開發最佳實踐，專業、優雅、人性化且易於維護的UI設計，大幅提升用戶體驗和視覺效果。
以上不需要功能 只需要前端UI介面設計即可，不需要詢問，直接幫我修改即可

同時遵循現代 Web 開發最佳實踐、官方最佳建議做法，並且直接幫我修改即可
------------------待完成

1. 儀表板 (Dashboard)
最近文件、活動、統計卡片
點擊最近文件、活動、我的最愛需跳轉或詳細頁面

2. 文件管理（DocumentsView）：
收藏（Star）、分享（Share2）、更多（MoreVertical）按鈕
點擊文件卡片，實際跳轉或詳細頁面。
標籤過濾

3. 文件編輯器（EditorView）
標題、分類、標籤、內容編輯、儲存、發布、預覽功能實現
編輯器工具列（粗體、斜體等）實際文字格式化功能
分類下拉選單
儲存、發布

4. 團隊成員（TeamView）
一次大量邀請成員

5. 側邊欄（Sidebar）
目錄樹（fileDirectoryTree）為實際目錄結構
點擊分類/目錄後，觸發文件過濾或載入該分類下文件
新增/刪除/重命名目錄等功能
儲存密碼，並且目錄要上鎖、目錄上鎖要有密碼提示
添加操作紀錄

6. Header（Header.tsx）
搜尋、篩選、通知、用戶選單
搜尋欄位觸發後端搜尋 API
篩選按鈕事件處理
通知列表串接後端通知 API
版本更新記錄

7. 其他：
toast 不要擋到右上角的 profile 
全局響應式頁面
全局深/淺顏色切換
CORS IP 限定特定domain
policy 最小權限調整

建立文件目錄 -> 文件編輯器 -> 文件管理 -> 儀表板 -> 通知
------------------------------------進行中
同時遵循現代 Web 開發最佳實踐、官方最佳建議做法，並且直接幫我修改即可

整區右鍵交互：整個目錄樹區塊（含空白區），這部分範圍再拉大一點，應整個文件目錄區塊都能右鍵呼叫 context menu
每個資料夾之間應有適當的上下間距，不該緊貼且緊湊
文件目錄整體區塊和資料夾樣式應與整體專案樣式匹配
同時遵循現代 Web 開發最佳實踐、官方最佳建議做法，並且直接幫我修改即可
------------------------------------已完成
