├── src/
│   ├── auth/              # 身份驗證相關邏輯
│   │   ├── AuthContext.tsx    # 全局身份驗證狀態管理
│   │   └── ProtectedRoute.tsx # 受保護路由組件
│   │
│   ├── components/        #  UI 組件
│   │   ├── Dashboard.tsx      # 儀表板
│   │   ├── DocumentsView.tsx  # 文件管理
│   │   ├── EditorView.tsx     # 文件編輯器視圖
│   │   ├── Header.tsx         # 頁面頂部
│   │   ├── Sidebar.tsx        # 側邊導航欄
│   │   ├── TeamView.tsx       # 團隊成員
│   │   └── modals/          # 彈出視窗組件
│   │       ├── ModalBase.tsx               # 基礎彈出視窗
│   │       ├── ProfileModal.tsx            # 個人資料彈出視窗
│   │       ├── SettingsModal.tsx           # 設定彈出視窗
│   │       └── NotificationSettingsModal.tsx # 通知設定彈出視窗
│   │
│   ├── layouts/           # 頁面佈局組件
│   │   └── MainLayout.tsx     # 主要應用佈局
│   │
│   ├── lib/               # 核心邏輯或第三方庫封裝
│   │   ├── api/             # API 請求相關
│   │   │   └── apiClient.ts   # Axios API 客戶端實例
│   │   ├── config/          # 配置文件
│   │   │   └── cognito.ts     # AWS Cognito 服務配置
│   │   └── hooks/           # 自定義 React Hooks
│   │       ├── useCognito.ts    # Cognito 身份驗證 Hook
│   │       ├── useCognitoUsers.ts # 獲取 Cognito 用戶清單的 Hook
│   │       └── useSecurityMonitor.ts # 用戶活動安全監控 Hook
│   │
│   ├── pages/             # 應用頁面
│   │   ├── _app.tsx         # Next.js 應用根組件
│   │   ├── 404.tsx          # 404 錯誤頁面
│   │   ├── index.tsx        # 首頁
│   │   └── login.tsx        # 登入頁面
│   │   └── api/             # API 請求相關
│   │       └── invite-user.ts # 邀請成員 API
│   │       └── delete-user.ts # 刪除成員 API
│   │       └── cognito-users.ts # 獲取 Cognito 用戶清單 API
│   │
│   ├── styles/            # 樣式文件
│   │   ├── globals.css      # 全局 CSS 樣式
│   │   └── toast.css        # Toast 通知的樣式
│   │
│   ├── types/             # TypeScript 型別定義
│   │   └── index.ts         # 全局型別定義
│   │
│   └── utils/             # 工具函式
│       ├── constants.ts     # 應用程序常數
│       └── notification.ts  # 通知顯示工具
│

------------------------------------
請幫我優化當前專案的 UI 樣式設計，要求具備良好的用戶體驗和專業視覺效果，包括：色彩搭配、排版佈局、元件間距、響應式設計等方面的改進，同時確保 CSS/樣式代碼結構清晰、可維護性高，並遵循現代前端開發最佳實踐

幫我添加深/淺色的切換按鈕，要求具備良好的用戶體驗和專業視覺效果，同時確保 CSS/樣式代碼結構清晰、可維護性高，並遵循現代前端開發最佳實踐

我要製作一個 Web應用程式 情境如下：
開發一個專為10位維運工程師設計的技術文件管理Web應用系統，
解決當前文件分散和缺乏統一編輯工具的問題。系統需具備完整的文件生命週期管理功能：
統一存儲各類技術SOP文件（AWS雲端服務操作、Akamai CDN配置、客戶服務流程等）、
提供直觀的分類瀏覽界面和精準的關鍵字搜尋引擎、
內建功能完善的富文本編輯器支援創建和修改結構化文件內容（包括多層標題、段落文本、超連結、操作步驟列表等格式化元素），
讓工程師能在單一平台上高效管理、快速檢索和即時編輯標準化操作手冊，提升團隊協作效率和作業一致性。

根據當前專案需求，UI介面再幫我添加更加完善且完整、常用且必須使用到的功能，
同時遵循現代前端開發最佳實踐，專業、優雅、人性化且易於維護的UI設計，大幅提升用戶體驗和視覺效果。
以上不需要功能 只需要前端UI介面設計即可，不需要詢問，直接幫我修改即可

同時遵循現代 Web 開發最佳實踐、官方最佳建議做法，並且直接幫我修改即可
------------------待完成

1. 文件管理（DocumentsView）：
收藏（Star）、分享（Share2）、更多（MoreVertical）按鈕
點擊文件卡片，實際跳轉或詳細頁面。
標籤過濾

2. 文件編輯器（EditorView）
標題、分類、標籤、內容編輯、儲存、發布、預覽功能實現
編輯器工具列（粗體、斜體等）實際文字格式化功能
分類下拉選單
儲存、發布

3. 團隊成員（TeamView）



4. 側邊欄（Sidebar）
目錄樹（fileDirectoryTree）為實際目錄結構
點擊分類/目錄後，觸發文件過濾或載入該分類下文件
新增/刪除/重命名目錄等功能
儲存密碼，並且目錄要上鎖、目錄上鎖要有密碼提示

5. Header（Header.tsx）
搜尋、篩選、通知、用戶選單
搜尋欄位觸發後端搜尋 API
篩選按鈕事件處理
通知列表串接後端通知 API
用戶選單個人資料編輯、密碼變更等功能
上傳頭像



6. Dashboard（Dashboard.tsx）
最近文件、活動、統計卡片
點擊最近文件、活動、我的最愛需跳轉或詳細頁面

其他：
toast 不要擋到右上角的 profile 
全局響應式頁面
全局深/淺顏色切換


------------------進行中

當用戶點擊觸發元素時顯示彈出視窗，當用戶點擊視窗外部區域時自動關閉視窗。
需要監聽 document 的點擊事件，判斷點擊目標是否在彈出視窗元素範圍內，如果點擊發生在視窗外部則執行關閉邏輯。
同時遵循現代 Web 開發最佳實踐、官方最佳建議做法，並且直接幫我修改即可

所有的彈出視窗都要如此，例如 Header 的通知功能、團隊成員的邀請、刪除成員等彈出視窗，
並且當點擊彈出視窗外部的任何區域時，視窗將會自動關閉所有的彈出視窗 而不是只關閉一個


------------------已完成
團隊成員 狀態篩選 全部 待驗證 已驗證
邀請成員 要有狀態 並添加到 團隊成員列表中
團隊成員 除了 邀請成員 還要能夠 刪除成員的功能
當 Cognito profile 屬性的值為空時 團隊成員的職位名稱要顯示 尚未填寫
當點擊刪除時 要彈出確認視窗 並且要顯示要刪除的成員名稱 同時要輸入要刪除的成員名稱 才能刪除
重整頁面時會自動回到上次停留的分頁與狀態部分已經成功了，接下來當點擊 sidebar 的 logo 圖案時要返回到儀表板的頁面
重整頁面時要停留在當前頁面 而不是返回到主應用首頁 例如 團隊成員 重整頁面時要停留在團隊成員頁面 而不是返回到主應用首頁
團隊成員 除了 邀請成員 還要能夠 刪除成員
邀請成員 要有狀態 並添加到 團隊成員列表中
現在我要實現團隊成員加入日期的功能：
當用戶點擊"發送邀請"按鈕邀請新成員時，需要在 AWS Cognito 用戶池中創建或更新該成員的 birthdate 屬性，
將值設置為當前日期並格式化為 YYYY-MM-DD 格式（例如：2025-06-24），這個日期將作為該成員的團隊加入日期記錄。
現在我要實現團隊成員的搜尋、篩選功能：
當在團隊成員的搜尋欄輸入用戶名稱或電子郵件時要能夠進行過濾篩選搜尋
現在我要實現一個團隊成員列表的即時搜尋功能。當用戶在團隊成員當中的搜尋輸入框中輸入關鍵字時，
系統應該即時過濾顯示的團隊成員列表，搜尋範圍包括成員的姓名和電子郵件地址，
支援部分匹配（模糊搜尋），搜尋不區分大小寫，並且當搜尋框清空時恢復顯示所有成員。
現在我要優化團隊成員列表的即時搜尋功能
默認情況要顯示共 x 個成員的功能
移除鍵盤快捷鍵支援（Ctrl+F 聚焦，Escape 清空）的功能
移除💡 提示：使用 Ctrl+F 快速搜尋，支援姓名和信箱模糊搜尋，按 Escape 清空搜尋的部分
現在我要實現一個團隊成員列表的篩選過濾功能：
移除名稱排序、信箱排序的選項
添加最近加入由遠至近、最近加入由近至遠的選項
添加職位名稱的下拉選項
邀請/刪除成員後幫我改為自動刷新成員列表（無需整頁 reload）
使用 React 狀態管理，邀請或刪除成功後自動重新拉取成員資料（呼叫 API），而不是 window.location.reload()。
另外，圖中是 AWS Cognito 控制台可以編輯邀請成員 Email 通知的主旨及訊息，
幫我根據當前專案設置一個完整且專業的主旨及訊息範本
同時遵循現代 開發最佳實踐、官方最佳建議做法，並且直接幫我修改即可，不需要詢問
當邀請新成員加入時，雖然 Cognito 控制台中能看到新用戶已成功創建，但被邀請的用戶沒有收到邀請郵件通知。
請幫我檢查並修復郵件發送功能，確保在 Cognito 用戶創建的同時能正常觸發邀請郵件的發送機制。
同時遵循現代 Web 開發最佳實踐、官方最佳建議做法，並且直接幫我修改即可
需要修復個人資料編輯彈出視窗的響應式設計問題，確保在不同螢幕尺寸（特別是較小的行動裝置螢幕）下，
整個表單內容都能完整顯示且保持良好的使用體驗，避免內容被截斷或超出可視範圍的情況。
同時遵循現代 Web 開發最佳實踐、官方最佳建議做法，並且直接幫我修改即可
modals 視窗彈出不要漸出效果，直接彈出來即可
